/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  11
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0.00  0.25  0)    //  0
    (1.00  0.25  0)    //  1
    (1.25  0.00  0)    //  2
    (2.25  0.00  0)    //  3
    (2.50  0.25  0)    //  4
    (4.00  0.25  0)    //  5

    (4.00  0.75  0)    //  6
    (2.50  0.75  0)    //  7
    (2.25  1.00  0)    //  8
    (1.25  1.00  0)    //  9
    (1.00  0.75  0)    // 10
    (0.00  0.75  0)    // 11


    (0.00  0.25  0.1)  // 12
    (1.00  0.25  0.1)  // 13
    (1.25  0.00  0.1)  // 14
    (2.25  0.00  0.1)  // 15
    (2.50  0.25  0.1)  // 16
    (4.00  0.25  0.1)  // 17

    (4.00  0.75  0.1)  // 18
    (2.50  0.75  0.1)  // 19
    (2.25  1.00  0.1)  // 20
    (1.25  1.00  0.1)  // 21
    (1.00  0.75  0.1)  // 22
    (0.00  0.75  0.1)  // 23
);

blocks
(
    hex ( 0  1 10 11 12 13 22 23) (20 20 1) simpleGrading (1 1 1)
    hex ( 1  2  9 10 13 14 21 22) ( 8 20 1) simpleGrading (1 1 1)
    hex ( 2  3  8  9 14 15 20 21) (20 20 1) simpleGrading (1 1 1)
    hex ( 3  4  7  8 15 16 19 20) ( 8 20 1) simpleGrading (1 1 1)
    hex ( 4  5  6  7 16 17 18 19) (30 20 1) simpleGrading (1 1 1)
);

boundary
(
    walls
    {
        type wall;
        faces
        (
            ( 0  1 13 12)
            ( 1  2 14 13)
            ( 2  3 15 14)
            ( 3  4 16 15)
            ( 4  5 17 16)
            ( 6  7 19 18)
            ( 7  8 20 19)
            ( 8  9 21 20)
            ( 9 10 22 21)
            (10 11 23 22)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (11  0 12 23)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            ( 5  6 18 17)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            ( 0 11 10  1)
            ( 1 10  9  2)
            ( 2  9  8  3)
            ( 3  8  7  4)
            ( 4  7  6  5)
            (12 13 22 23)
            (13 14 21 22)
            (14 15 20 21)
            (15 16 19 20)
            (16 17 18 19)
        );
    }
);


// ************************************************************************* //
