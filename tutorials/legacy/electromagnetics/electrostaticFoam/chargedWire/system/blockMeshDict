/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  11
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0.001 0 0)
    (0.038 0 0)
    (0.076 0 0)
    (0.076 0.02687 0)
    (0.02687 0.02687 0)
    (0.0007071 0.0007071 0)
    (0.076 0.114 0)
    (0.02687 0.114 0)
    (0 0.114 0)
    (0 0.038 0)
    (0 0.001 0)
    (0.001 0 0.5)
    (0.038 0 0.5)
    (0.076 0 0.5)
    (0.076 0.02687 0.5)
    (0.02687 0.02687 0.5)
    (0.0007071 0.0007071 0.5)
    (0.076 0.114 0.5)
    (0.02687 0.114 0.5)
    (0 0.114 0.5)
    (0 0.038 0.5)
    (0 0.001 0.5)
);

blocks
(
    hex (5 4 9 10 16 15 20 21) (60 30 1) simpleGrading (5 1 1)
    hex (0 1 4 5 11 12 15 16) (60 30 1) simpleGrading (5 1 1)
    hex (1 2 3 4 12 13 14 15) (50 30 1) simpleGrading (1 1 1)
    hex (4 3 6 7 15 14 17 18) (50 50 1) simpleGrading (1 1 1)
    hex (9 4 7 8 20 15 18 19) (30 50 1) simpleGrading (1 1 1)
);

edges
(
    arc 0 5 (0.00092387 0.00038268 0)
    arc 5 10 (0.00038268 0.00092387 0)
    arc 1 4 (0.0351074 0.0145419 0)
    arc 4 9 (0.0145419 0.0351074 0)
    arc 11 16 (0.00092387 0.00038268 0.5)
    arc 16 21 (0.00038268 0.00092387 0.5)
    arc 12 15 (0.0351074 0.0145419 0.5)
    arc 15 20 (0.0145419 0.0351074 0.5)
);

defaultPatch
{
    type empty;
}

boundary
(
    left
    {
        type symmetryPlane;
        faces
        (
            (8 9 20 19)
            (9 10 21 20)
        );
    }
    right
    {
        type symmetryPlane;
        faces
        (
            (2 3 14 13)
            (3 6 17 14)
        );
    }
    down
    {
        type symmetryPlane;
        faces
        (
            (0 1 12 11)
            (1 2 13 12)
        );
    }
    up
    {
        type patch;
        faces
        (
            (7 8 19 18)
            (6 7 18 17)
        );
    }
    hole
    {
        type patch;
        faces
        (
            (10 5 16 21)
            (5 0 11 16)
        );
    }
);


// ************************************************************************* //
