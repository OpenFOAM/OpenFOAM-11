/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  11
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (-26 -19 -16)
    (10 -19 -16)
    (10 0 -16)
    (-26 0 -16)

    (-26 -19 -1)
    (10 -19 -1)
    (10 0 -1)
    (-26 0 -1)

    (-26 -19 0.188)
    (10 -19 0.188)
    (10 0 0.188)
    (-26 0 0.188)

    (-26 -19 0.244)
    (10 -19 0.244)
    (10 0 0.244)
    (-26 0 0.244)

    (-26 -19 0.3)
    (10 -19 0.3)
    (10 0 0.3)
    (-26 0 0.3)

    (-26 -19 1.6)
    (10 -19 1.6)
    (10 0 1.6)
    (-26 0 1.6)

    (-26 -19 4)
    (10 -19 4)
    (10 0 4)
    (-26 0 4)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (36 19 50) simpleGrading (1 1 0.05)
    hex (4 5 6 7 8 9 10 11) (36 19 50) simpleGrading (1 1 1)
    hex (8 9 10 11 12 13 14 15) (36 19 4) simpleGrading (1 1 1)
    hex (12 13 14 15 16 17 18 19) (36 19 4) simpleGrading (1 1 1)
    hex (16 17 18 19 20 21 22 23) (36 19 40) simpleGrading (1 1 1)
    hex (20 21 22 23 24 25 26 27) (36 19 20) simpleGrading (1 1 5)
);

boundary
(
    atmosphere
    {
        type patch;
        faces
        (
            (24 25 26 27)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (1 2 6 5)
            (5 6 10 9)
            (9 10 14 13)
            (13 14 18 17)
            (17 18 22 21)
            (21 22 26 25)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
            (4 8 11 7)
            (8 12 15 11)
            (12 16 19 15)
            (16 20 23 19)
            (20 24 27 23)
        );
    }
    bottom
    {
        type symmetryPlane;
        faces
        (
            (0 3 2 1)
        );
    }
    side
    {
        type symmetryPlane;
        faces
        (
            (0 1 5 4)
            (4 5 9 8)
            (8 9 13 12)
            (12 13 17 16)
            (16 17 21 20)
            (20 21 25 24)
        );
    }
    midPlane
    {
        type symmetryPlane;
        faces
        (
            (3 7 6 2)
            (7 11 10 6)
            (11 15 14 10)
            (15 19 18 14)
            (19 23 22 18)
            (23 27 26 22)
        );
    }
);


// ************************************************************************* //
