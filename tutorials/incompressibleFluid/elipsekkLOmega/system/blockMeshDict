/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  11
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

vertices
(
    (0.5 0 0)               //0
    (2 0 0)                 //1
    (5 0 0)                 //2
    (5 1.414214 0)          //3
    (1.414214 1.414214 0)   //4
    (0.353553 0.353553 0)   //5
    (5 3 0)                 //6
    (1.414214 3 0)          //7
    (0 3 0)                 //8
    (0 2 0)                 //9
    (0 0.5 0)               //10
    (0.5 0 0.5)             //11
    (2 0 0.5)               //12
    (5 0 0.5)               //13
    (5 1.414214 0.5)        //14
    (1.414214 1.414214 0.5) //15
    (0.353553 0.353553 0.5) //16
    (5 3 0.5)               //17
    (1.414214 3 0.5)        //18
    (0 3 0.5)               //19
    (0 2 0.5)               //20
    (0 0.5 0.5)             //21
);

blocks
(
    hex (5 4 9 10 16 15 20 21) (70 70 1) simpleGrading (17 1 1)
    hex (0 1 4 5 11 12 15 16) (70 70 1) simpleGrading (17 1 1)
    hex (1 2 3 4 12 13 14 15) (25 70 1) simpleGrading (3 1 1)
    hex (4 3 6 7 15 14 17 18) (25 10 1) simpleGrading (3 2 1)
    hex (9 4 7 8 20 15 18 19) (70 10 1) simpleGrading (1 2 1)
);

edges
(
    arc 0 5 (0.469846 0.17101 0)
    arc 5 10 (0.17101 0.469846 0)
    arc 1 4 (1.87938 0.68404 0)
    arc 4 9 (0.68404 1.87938 0)
    arc 11 16 (0.469846 0.17101 0.5)
    arc 16 21 (0.17101 0.469846 0.5)
    arc 12 15 (1.87938 0.68404 0.5)
    arc 15 20 (0.68404 1.87938 0.5)
);

boundary
(
    left
    {
        type symmetry;
        faces
        (
            (8 9 20 19)
            (9 10 21 20)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (2 3 14 13)
            (3 6 17 14)
        );
    }
    down
    {
        type symmetry;
        faces
        (
            (0 1 12 11)
            (1 2 13 12)
        );
    }
    up
    {
        type symmetry;
        faces
        (
            (7 8 19 18)
            (6 7 18 17)
        );
    }
    hole
    {
        type wall;
        faces
        (
            (10 5 16 21)
            (5 0 11 16)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (10 9 4 5)
            (5 4 1 0)
            (1 4 3 2)
            (4 7 6 3)
            (4 9 8 7)
            (21 16 15 20)
            (16 11 12 15)
            (12 13 14 15)
            (15 14 17 18)
            (15 18 19 20)
        );
    }
);


// ************************************************************************* //
